name: compiler-build

on: [push, pull_request]
env:
  NUGET_CERT_REVOCATION_MODE: offline
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build-native:
    name: build-native-${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        config:
          - {name: x86_64-macos, os: macos-latest, cmakeArgs: -DENABLE_X86SIMD=OFF, buildType: Release}
          - {name: x86_64-windows, os: windows-latest, arch: x64, cmakeArgs: -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl, buildType: Release}

    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set up build environment (Windows, Visual Studio)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.config.arch}}
        if: runner.os == 'Windows'

      - name: Set up build environment (Macos)
        run: |
          brew install sunnycase/core/libomp@11.1.0
        if: runner.os == 'Macos'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install Conan
        shell: bash
        run: |
          pip install conan==1.58

      - name: Configure Conan (Linux)
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV
        if: runner.os == 'Linux'

      - name: Configure CMake
        shell: bash
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{matrix.config.buildType}} ${{matrix.config.cmakeArgs}} -DBUILD_TESTING=OFF -DPython3_ROOT_DIR=${pythonLocation}

      - name: Upload Conan Recipes
        env:
          CONAN_PASSWORD: ${{secrets.CONAN_SUNNYCASE_PASSWORD}}
        shell: bash
        run: |
          conan user sunnycase -r sunnycase -p $CONAN_PASSWORD
          conan upload "*" --all -r sunnycase -c

  build-manylinux-native:
    name: build-manylinux-native-${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      matrix:
        config:
          - {name: x86_64-linux, os: ubuntu-latest, cmakeArgs: '', buildType: Release}

    steps:
      - uses: actions/checkout@v3

      - name: Build in docker (Linux)
        uses: docker://sunnycase/manylinux2014_x86_64
        with:
            args: /bin/bash tools/build.sh ${{secrets.CONAN_SUNNYCASE_PASSWORD}}
        if: runner.os == 'Linux'
